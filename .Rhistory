endpoint <- str_c("https://api.themoviedb.org/3/movie/",ids)
query_params <- list("api_key" = Sys.getenv("TMDb_APP_TOKEN"))
parameter_response <-GET(endpoint, query = query_params)
imdb_id <- fromJSON(content(parameter_response, as = "text"))%>%.$imdb_id
print(imdb_id)
if (is.null(imdb_id)==TRUE ){
imdb[i] = NA
}
else{
imdb[i] = gsub('tt','',imdb_id)
}
#imdb[i] = gsub('tt','',imdb_id)
i=i+1
}
id<-df$id
imdb<-c()
i=1
endpoint_2 = "https://api.themoviedb.org/3/movie/"
id<-df$id
imdb<-c()
i=1
id<-df$id
imdb<-c()
i=1
for (ids in id){
endpoint <- str_c("https://api.themoviedb.org/3/movie/",ids)
query_params <- list("api_key" = Sys.getenv("TMDb_APP_TOKEN"))
parameter_response <-GET(endpoint, query = query_params)
imdb_id <- fromJSON(content(parameter_response, as = "text"))%>%.$imdb_id
print(imdb_id)
if (is.null(imdb_id)==TRUE ){
imdb[i] = NA
}
else{
imdb[i] = gsub('tt','',imdb_id)
}
#imdb[i] = gsub('tt','',imdb_id)
i=i+1
Sys.sleep(0.1)
}
imdb
id<-df$id
imdb<-c()
i=1
for (ids in id){
endpoint <- str_c("https://api.themoviedb.org/3/movie/",ids)
query_params <- list("api_key" = Sys.getenv("TMDb_APP_TOKEN"))
parameter_response <-GET(endpoint, query = query_params)
imdb_id <- fromJSON(content(parameter_response, as = "text"))%>%.$imdb_id
imdb[i] = gsub('tt','',imdb_id)
i=i+1
Sys.sleep(0.1)
}
for (ids in id){
endpoint <- str_c("https://api.themoviedb.org/3/movie/",ids)
query_params <- list("api_key" = Sys.getenv("TMDb_APP_TOKEN"))
parameter_response <-GET(endpoint, query = query_params)
imdb_id <- fromJSON(content(parameter_response, as = "text"))%>%.$imdb_id
print(imdb_id)
imdb[i] = gsub('tt','',imdb_id)
i=i+1
Sys.sleep(0.1)
}
id<-df$id
imdb<-c()
i=1
for (ids in id){
endpoint <- str_c("https://api.themoviedb.org/3/movie/",ids)
query_params <- list("api_key" = Sys.getenv("TMDb_APP_TOKEN"))
parameter_response <-GET(endpoint, query = query_params)
imdb_id <- fromJSON(content(parameter_response, as = "text"))%>%.$imdb_id
imdb[i] = gsub('tt','',imdb_id)
i=i+1
Sys.sleep(0.2)
}
imdb
bechdal<-c()
i=1
for (ids in imdb){
endpoint <- str_c('http://bechdeltest.com/api/v1/getMovieByImdbId?imdbid=',ids)
parameter_response <-GET(endpoint)
bech <- fromJSON(content(parameter_response, as = "text"))
bechdal[i] = bech$rating
i=i+1
}
bechdal<-c()
i=1
for (ids in imdb){
endpoint <- str_c('http://bechdeltest.com/api/v1/getMovieByImdbId?imdbid=',ids)
parameter_response <-GET(endpoint)
bech <- fromJSON(content(parameter_response, as = "text"))
bechdal[i] = bech$rating
i=i+1
Sys.sleep(0.1)
}
for (ids in imdb){
endpoint <- str_c('http://bechdeltest.com/api/v1/getMovieByImdbId?imdbid=',ids)
parameter_response <-GET(endpoint)
bech <- fromJSON(content(parameter_response, as = "text"))
print (bech$rating)
bechdal[i] = bech$rating
i=i+1
Sys.sleep(0.1)
}
for (ids in imdb){
endpoint <- str_c('http://bechdeltest.com/api/v1/getMovieByImdbId?imdbid=',ids)
parameter_response <-GET(endpoint)
bech <- fromJSON(content(parameter_response, as = "text"))
print (bech$rating)
#bechdal[i] = bech$rating
i=i+1
Sys.sleep(0.1)
}
bechdal<-c()
i=1
for (ids in imdb){
endpoint <- str_c('http://bechdeltest.com/api/v1/getMovieByImdbId?imdbid=',ids)
parameter_response <-GET(endpoint)
bech <- fromJSON(content(parameter_response, as = "text"))
if (is.null(bech$rating)){
bechdal[i]=NA
}
else{
bechdal[i] = bech$rating
}
i=i+1
Sys.sleep(0.1)
}
bechdal
library(purrr)
library(stringr)
library(dplyr)
library(rvest)
df_all <- data.frame( Male_rating=numeric(), Female_rating = numeric(), Overall=numeric())
for (ids in imdb){
url<-str_c('https://www.imdb.com/title/tt',ids,'/ratings?ref_=tt_ov_rt')
rating <- read_html(url)
info_box <-html_nodes(rating, "#main > section > div >     table:nth-child(14)")
table_df <- html_table(info_box, header = TRUE)[[1]]
Rating<-c()
i=1
for (item in table_df$`All Ages`){
if (str_detect(item,"^[:digit:]+.*")==TRUE){
pattern_desired = str_extract(item, '^[:digit:]\\.+[:digit:]')
item <- pattern_desired
Rating[i] = item
i=i+1
}
}
table_df$Rating = Rating
colnames(table_df)[1]<- "Gender"
table_df<-subset(table_df, select=c("Gender",'Rating'))
table_df
Male_rating<-table_df%>%filter(Gender=="Males")%>%.$Rating
Female_rating<-table_df%>%filter(Gender=="Females")%>%.$Rating
Overall <-table_df%>%filter(Gender=="All")%>%.$Rating
df_all<-rbind(df_all, data.frame(Male_rating,Female_rating,Overall))
}
library(purrr)
library(stringr)
library(dplyr)
library(rvest)
df_all <- data.frame( Male_rating=numeric(), Female_rating = numeric(), Overall=numeric())
for (ids in imdb){
url<-str_c('https://www.imdb.com/title/tt',ids,'/ratings?ref_=tt_ov_rt')
rating <- read_html(url)
info_box <-html_nodes(rating, "#main > section > div >     table:nth-child(14)")
table_df <- html_table(info_box, header = TRUE)[[1]]
Rating<-c()
i=1
for (item in table_df$`All Ages`){
if (str_detect(item,"^[:digit:]+.*")==TRUE){
pattern_desired = str_extract(item, '^[:digit:]\\.+[:digit:]')
item <- pattern_desired
Rating[i] = item
i=i+1
}
}
table_df$Rating = Rating
colnames(table_df)[1]<- "Gender"
table_df<-subset(table_df, select=c("Gender",'Rating'))
table_df
Male_rating<-table_df%>%filter(Gender=="Males")%>%.$Rating
Female_rating<-table_df%>%filter(Gender=="Females")%>%.$Rating
Overall <-table_df%>%filter(Gender=="All")%>%.$Rating
df_all<-rbind(df_all, data.frame(Male_rating,Female_rating,Overall))
Sys.sleep(0.15)
}
df_all$Title <- title
df_all$Bechdal <-bechdal
df_all <-df_all[c("Title", "Bechdal", "Male_rating", "Female_rating","Overall")]
df_all
df_all<-df_all[!is.na(df_all_senat$Bechdal),]
df_all
df_all<-df_all[!is.na(df_all$Bechdal),]
df_all
df_all<-df_all[!is.na(df_all$Bechdal),]
df_all
df_all <- data.frame( Male_rating=numeric(), Female_rating = numeric(), Overall=numeric())
for (ids in imdb){
url<-str_c('https://www.imdb.com/title/tt',ids,'/ratings?ref_=tt_ov_rt')
rating <- read_html(url)
info_box <-html_nodes(rating, "#main > section > div >     table:nth-child(14)")
table_df <- html_table(info_box, header = TRUE)[[1]]
Rating<-c()
i=1
for (item in table_df$`All Ages`){
if (str_detect(item,"^[:digit:]+.*")==TRUE){
pattern_desired = str_extract(item, '^[:digit:]\\.+[:digit:]')
item <- pattern_desired
Rating[i] = item
i=i+1
}
}
table_df$Rating = Rating
colnames(table_df)[1]<- "Gender"
table_df<-subset(table_df, select=c("Gender",'Rating'))
table_df
Male_rating<-table_df%>%filter(Gender=="Males")%>%.$Rating
Female_rating<-table_df%>%filter(Gender=="Females")%>%.$Rating
Overall <-table_df%>%filter(Gender=="All")%>%.$Rating
df_all<-rbind(df_all, data.frame(Male_rating,Female_rating,Overall))
Sys.sleep(0.15)
}
df_all$Title <- title
df_all$Bechdal <-bechdal
df_all <-df_all[c("Title", "Bechdal", "Male_rating", "Female_rating","Overall")]
df_all
df_all<-df_all[!is.na(df_all$Bechdal),]
df_all
summary(df_all)
df_all
df_all[c("Male_rating","Female_rating","Overall")] = as.numeric(df_all[c("Male_rating","Female_rating","Overall")])
df_all$Male_rating = as.numeric(df_all$Male_rating)
df_all$Male_rating = as.numeric(df_all$Male_rating)
df_all$Female_rating = as.numeric(df_all$Female_rating)
df_all$Overall= as.numeric(df_all$Overall)
summary(df_all)
library(purrr)
library(stringr)
library(dplyr)
library(rvest)
df_all <- data.frame( Male_rating=numeric(), Female_rating = numeric(), Overall=numeric())
for (ids in imdb){
url<-str_c('https://www.imdb.com/title/tt',ids,'/ratings?ref_=tt_ov_rt')
rating <- read_html(url)
info_box <-html_nodes(rating, "#main > section > div >     table:nth-child(14)")
table_df <- html_table(info_box, header = TRUE)[[1]]
Rating<-c()
i=1
for (item in table_df$`All Ages`){
if (str_detect(item,"^[:digit:]+.*")==TRUE){
pattern_desired = str_extract(item, '^[:digit:]\\.+[:digit:]')
item <- pattern_desired
Rating[i] = item
i=i+1
}
}
table_df$Rating = Rating
colnames(table_df)[1]<- "Gender"
table_df<-subset(table_df, select=c("Gender",'Rating'))
table_df
Male_rating<-table_df%>%filter(Gender=="Males")%>%.$Rating
Female_rating<-table_df%>%filter(Gender=="Females")%>%.$Rating
Overall <-table_df%>%filter(Gender=="All")%>%.$Rating
df_all<-rbind(df_all, data.frame(Male_rating,Female_rating,Overall))
Sys.sleep(0.15)
}
df_all$Title <- title
df_all$Bechdal <-bechdal
df_all <-df_all[c("Title", "Bechdal", "Male_rating", "Female_rating","Overall")]
df_all
df_all_sub<-df_all[!is.na(df_all$Bechdal),]
df_all_sub<-df_all[!is.na(df_all$Bechdal),]
df_all_sub$Male_rating = as.numeric(as.character(df_all_sub$Male_rating))
df_all_sub$Female_rating = as.numeric(as.character(df_all_sub$Female_rating))
df_all_sub$Overall= as.numeric(as.character(df_all_sub$Overall))
summary(df_all_sub)
summary(df_all_sub)
df_all_sub
describe.by(df_all_sub, df_all_sub$Bechdal)
library(psych)
ddescribeBy(df_all_sub, df_all_sub$Bechdal)
describeBy(df_all_sub, df_all_sub$Bechdal)
describeBy(c(df_all_sub$Male_rating, df_all_sub$Female_rating, df_all_sub$Overall), df_all_sub$Bechdal)
describeBy(df_all_sub%>%select('Male_rating','Female_rating',"Overall","Bechdal"), df_all_sub$Bechdal)
dd<-describeBy(df_all_sub%>%select('Male_rating','Female_rating',"Overall","Bechdal"), df_all_sub$Bechdal)
dd<-describeBy(df_all_sub%>%select('Male_rating','Female_rating',"Overall","Bechdal"), df_all_sub$Bechdal)
dd%>%select("n","mean","sd","median","min","max")
describeBy(df_all_sub%>%select('Male_rating','Female_rating',"Overall","Bechdal"), df_all_sub$Bechdal)
library(psych)
summary(df_all_sub)
odbc::odbcListDrivers()[,1:2]
install.packages("odbc")
odbc::odbcListDrivers()[,1:2]
install.packages("MySQL")
install.packages("mysql")
install.packages("RMySQL")
knitr::opts_chunk$set(echo = TRUE)
# Read necessary libraries
library(DBI)
world_con <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
world_con
world_con <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
world_con
world_con <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
world_con
world_con <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
world_con
library(knitr)
knitr::opts_chunk$set(cache = FALSE)
opts_chunk$set(fig.path="images/")
library(DBI)
witch_con <- dbConnect(
RMySQL::MySQL(),
user = 'student',
password = 'mds-is-fun',
dbname = 'witchcraft',
host = 'tbrambor.csbmzoea3lu9.us-east-1.rds.amazonaws.com',
port = 3306
)
library(DBI)
witch_con <- dbConnect(
RMySQL::MySQL(),
user = 'student',
password = 'mds-is-fun',
dbname = 'witchcraft',
host = 'tbrambor.csbmzoea3lu9.us-east-1.rds.amazonaws.com',
port = 3306
)
witch_con
show tables
select Name
library(knitr)
knitr::opts_chunk$set(cache = FALSE)
opts_chunk$set(fig.path="images/")
library(DBI)
witch_con <- dbConnect(
RMySQL::MySQL(),
user = 'student',
password = 'mds-is-fun',
dbname = 'witchcraft',
host = 'tbrambor.csbmzoea3lu9.us-east-1.rds.amazonaws.com',
port = 3306
)
library(knitr)
knitr::opts_chunk$set(cache = FALSE)
opts_chunk$set(fig.path="images/")
library(DBI)
witch_con <- dbConnect(
RMySQL::MySQL(),
user = 'student',
password = 'mds-is-fun',
dbname = 'witchcraft',
host = 'tbrambor.csbmzoea3lu9.us-east-1.rds.amazonaws.com',
port = 3306
)
witch_con
library(knitr)
knitr::opts_chunk$set(cache = FALSE)
opts_chunk$set(fig.path="images/")
library(DBI)
witch_con <- dbConnect(
RMySQL::MySQL(),
user = 'student',
password = 'mds-is-fun',
dbname = 'witchcraft',
host = 'tbrambor.csbmzoea3lu9.us-east-1.rds.amazonaws.com',
port = 3306
)
witch_con
library(knitr)
knitr::opts_chunk$set(cache = FALSE)
opts_chunk$set(fig.path="images/")
library(DBI)
witch_con <- dbConnect(
RMySQL::MySQL(),
user = 'student',
password = 'mds-is-fun',
dbname = 'witchcraft',
host = 'tbrambor.csbmzoea3lu9.us-east-1.rds.amazonaws.com',
port = 3306
)
witch_con
library(knitr)
knitr::opts_chunk$set(cache = FALSE)
opts_chunk$set(fig.path="images/")
library(DBI)
witch_con <- dbConnect(
RMySQL::MySQL(),
user = 'student',
password = 'mds-is-fun',
dbname = 'witchcraft',
host = 'tbrambor.csbmzoea3lu9.us-east-1.rds.amazonaws.com',
port = 3306
)
witch_con
dbDisconnect(witch_con)
library(knitr)
knitr::opts_chunk$set(cache = FALSE)
opts_chunk$set(fig.path="images/")
library(knitr)
knitr::opts_chunk$set(cache = FALSE)
opts_chunk$set(fig.path="images/")
library(DBI)
witch_con <- dbConnect(
RMySQL::MySQL(),
user = 'student',
password = 'mds-is-fun',
dbname = 'witchcraft',
host = 'tbrambor.csbmzoea3lu9.us-east-1.rds.amazonaws.com',
port = 3306
)
witch_con
library(knitr)
knitr::opts_chunk$set(cache = FALSE)
opts_chunk$set(fig.path="images/")
library(dplyr)
library(plyr)
panel <- read.csv("panel-for-R.csv")
sub <- panel[, c("idnum", "panelwave","owngun", "fear", "trust")]
sub$fear = ifelse(sub$fear==1, 1, 0)
sub$trust = ifelse(sub$trust==2, 1, 0)
sub$owngun = ifelse(sub$owngun==1, 1, 0)
lm1 <- lm(owngun ~ fear + trust + as.factor(panelwave),  data = sub)
summary(lm1)
library(QMSS)
clusterSE(fit = lm1, cluster.var = "idnum", data=sub)
sub$year = ifelse(sub$panelwave==3, 1, 0)
plm1 <- plm(owngun ~ fear + trust + year,  index = c("idnum", "panelwave"),  model = "fd", data = sub)
summary(plm1)
clusterSE(fit = plm1, cluster.var = "idnum", data=sub)
library(dplyr)
library(plyr)
panel <- read.csv("panel-for-R.csv")
library(QMSS)
clusterSE(fit = lm1, cluster.var = "idnum", data=sub)
table(sub$fear)
table(sub$owngun)
table(sub$trust)
table(sub$owngun)
table(sub$fear)
sub <- panel[, c("idnum", "panelwave","owngun", "fear", "trust")]
sub$fear = ifelse(sub$fear==1, 1, 0) # 1 = is afraid, 0 = is not afraid
sub$trust = ifelse(sub$trust==2, 1, 0) # 1= cannot trust, 0=can trust
table(sub$fear)
sub$owngun = ifelse(sub$owngun==1, 1, 0)
library("devtools")
devtools::install_github("Zhang_Chuze/BrkbadWiki")
devtools::install_github("czhang2581/BrkbadWiki")
devtools::install_github("czhang2581/BrkbadWiki")
library(BrkbadWiki)
option(10)
character(1, "occupation")
character(14, "occupation")
character("Jesse Pinkman", "occupation")
character("Skyler White", "occupation")
character("Skyler White", "image")
devtools::test()
devtools::test()
library(devtools)
devtools::test()
library(devtools)
devtools::install_github("czhang2581/BrkbadWiki")
library(BrkbadWiki)
option(5)
charaters("Walter White", "Occupation")
library(BrkbadWiki)
charaters("Walter White", "Occupation")
character()
library("devtools")
library("BrkbadWiki")
characters("Walter White", "Occupation")
option(10)
cast("15")
characters("Walter White", "image")
library("devtools")
document()
devtools::document()
devtools::document()
devtools::document()
setwd("~/Github/BrkbadWiki")
devtools::document()
build()
check()
devtools::test()
devtools::test()
devtools::document()
devtools::document()
build()
devtools::test()
check()
